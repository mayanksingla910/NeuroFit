/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TermsRouteImport } from './routes/terms'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as OnboardingQuestionsRouteImport } from './routes/_onboarding/questions'
import { Route as OnboardingIntroRouteImport } from './routes/_onboarding/intro'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'

const TermsRoute = TermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingQuestionsRoute = OnboardingQuestionsRouteImport.update({
  id: '/_onboarding/questions',
  path: '/questions',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingIntroRoute = OnboardingIntroRouteImport.update({
  id: '/_onboarding/intro',
  path: '/intro',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/_authenticated/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/intro': typeof OnboardingIntroRoute
  '/questions': typeof OnboardingQuestionsRoute
}
export interface FileRoutesByTo {
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/intro': typeof OnboardingIntroRoute
  '/questions': typeof OnboardingQuestionsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_onboarding/intro': typeof OnboardingIntroRoute
  '/_onboarding/questions': typeof OnboardingQuestionsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/privacy'
    | '/terms'
    | '/login'
    | '/signup'
    | '/dashboard'
    | '/intro'
    | '/questions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/privacy'
    | '/terms'
    | '/login'
    | '/signup'
    | '/dashboard'
    | '/intro'
    | '/questions'
  id:
    | '__root__'
    | '/privacy'
    | '/terms'
    | '/_auth/login'
    | '/_auth/signup'
    | '/_authenticated/dashboard'
    | '/_onboarding/intro'
    | '/_onboarding/questions'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PrivacyRoute: typeof PrivacyRoute
  TermsRoute: typeof TermsRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  OnboardingIntroRoute: typeof OnboardingIntroRoute
  OnboardingQuestionsRoute: typeof OnboardingQuestionsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboarding/questions': {
      id: '/_onboarding/questions'
      path: '/questions'
      fullPath: '/questions'
      preLoaderRoute: typeof OnboardingQuestionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboarding/intro': {
      id: '/_onboarding/intro'
      path: '/intro'
      fullPath: '/intro'
      preLoaderRoute: typeof OnboardingIntroRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  PrivacyRoute: PrivacyRoute,
  TermsRoute: TermsRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  OnboardingIntroRoute: OnboardingIntroRoute,
  OnboardingQuestionsRoute: OnboardingQuestionsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
